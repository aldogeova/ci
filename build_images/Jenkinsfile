pipeline {
      agent any

      options {
            timestamps()
      }

      environment {
            EBUY_HOME = '/srv/dockers/ebuy-project'
            WORKSPACE = '/srv/dockers/'
      }

      stages {
            stage('Prepare Workspace') {
                  steps {
                        script {
                              echo 'Set build name...'
                              currentBuild.displayName = "$env.BUILD_ID - $BRANCH_NAME"
                              env.BRANCH_NAME = "${BRANCH_NAME}"
                        }
                  }
            }
            stage('Construct Environment') {
                  steps {
                        echo 'Constructing...'
                        echo 'Deleting old code eBuy system...'
                        sh '''rm $EBUY_HOME -fR'''

                        echo 'Updating eBuy system...'

                        sh '''
                              cd $WORKSPACE
                              git clone git@bitbucket.org:bpebuy/ebuy-project.git
                        '''
                        sh '''
                              cd $EBUY_HOME
                              git fetch
                              git checkout $BRANCH_NAME
                              git pull
                              git submodule init
                              git submodule update --jobs=6
                        '''
                  }
            }
            stage('Build') {
                  steps {
                        echo 'Building eBuy system'

                        sh '''
                    cd $EBUY_HOME
                    ./gradlew :alert-service:bootJar --parallel
                    ./gradlew :api-gateway:bootJar --parallel
                    ./gradlew :client-service:bootJar --parallel
                    ./gradlew :config-service:bootJar --parallel
                    ./gradlew :masterdata-service:bootJar --parallel
                    ./gradlew :registry-service:bootJar --parallel
                    ./gradlew :uaa-service:bootJar --parallel
                    ./gradlew :product-service:bootJar --parallel
                    ./gradlew :supplier-service:bootJar --parallel
                    ./gradlew :srm-service:bootJar --parallel
                    ./gradlew :supplier-portal-service:bootJar --parallel
                    ./gradlew :sourcing-service:bootJar --parallel
                '''
                  }
            }
            stage('Stop Project') {
                  steps {
                        echo 'Stopping current eBuy system execution'
                        sh '''
                    cd $EBUY_HOME

                    docker-compose stop

                    docker network prune --force

                    docker-compose rm -f ebuy-nginx
                    docker-compose rm -f angular-client
                    docker-compose -f docker-compose-cleanup.yml down -v
                '''
                  }
            }
            stage('Build Docker Images') {
                  steps {
                        echo 'Creating Docker Images'
                        sh '''
                    cd $EBUY_HOME
                    docker-compose build --force-rm --no-cache --parallel
                '''
                  }
            }
            stage('Deploy Project') {
                  steps {
                        echo 'Starting eBuy system'
                        sh '''
                    cd $EBUY_HOME
                    docker-compose up -d --force-recreate
                '''
                  }
            }
      }
}
